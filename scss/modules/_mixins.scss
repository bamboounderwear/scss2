// Media query mixins
@mixin screen($size) {
  @if $size == 'sm' {
    @media (min-width: 640px) { @content; }
  } @else if $size == 'md' {
    @media (min-width: 768px) { @content; }
  } @else if $size == 'lg' {
    @media (min-width: 1024px) { @content; }
  } @else if $size == 'xl' {
    @media (min-width: 1280px) { @content; }
  } @else if $size == '2xl' {
    @media (min-width: 1536px) { @content; }
  }
}

// Typography mixins
@mixin font-size($size, $line-height: normal) {
  font-size: $size;
  @if $line-height != normal {
    line-height: $line-height;
  }
}

@mixin truncate($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// Gradient mixins
@mixin gradient($direction, $start-color, $end-color) {
  background: linear-gradient($direction, $start-color, $end-color);
}

@mixin gradient-text($gradient) {
  background: $gradient;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

// Shadow mixins
@mixin shadow($level: 'md') {
  @if $level == 'sm' {
    box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  } @else if $level == 'md' {
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  } @else if $level == 'lg' {
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
  }
}

// Transition mixins
@mixin transition($properties...) {
  $transitions: ();
  @each $property in $properties {
    $transitions: append($transitions, $property 0.3s ease-in-out, comma);
  }
  transition: $transitions;
}

// Flex/Grid mixins
@mixin flex($direction: row, $justify: flex-start, $align: stretch) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

@mixin grid($columns: 1, $gap: 1rem) {
  display: grid;
  grid-template-columns: repeat($columns, minmax(0, 1fr));
  gap: $gap;
}

// Animation mixins
@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

@mixin animate($name, $duration: 0.3s, $timing: ease, $delay: 0s) {
  animation: $name $duration $timing $delay;
}