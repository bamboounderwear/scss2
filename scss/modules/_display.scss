// Basic display properties
.display {
  &-block { display: block; }
  &-inline { display: inline; }
  &-inline-block { display: inline-block; }
  &-flex { display: flex; }
  &-inline-flex { display: inline-flex; }
  &-grid { display: grid; }
  &-none { display: none; }
}

// Visibility utilities
.visible { visibility: visible; }
.invisible { visibility: hidden; }

// Overflow utilities
.overflow {
  &-auto { overflow: auto; }
  &-hidden { overflow: hidden; }
  &-scroll { overflow: scroll; }
  &-visible { overflow: visible; }
  
  // Axis-specific overflow
  &-x-auto { overflow-x: auto; }
  &-x-hidden { overflow-x: hidden; }
  &-x-scroll { overflow-x: scroll; }
  &-y-auto { overflow-y: auto; }
  &-y-hidden { overflow-y: hidden; }
  &-y-scroll { overflow-y: scroll; }
}

// Breakpoint mixins
@mixin sm {
  @media (min-width: 640px) { @content; }
}
@mixin md {
  @media (min-width: 768px) { @content; }
}
@mixin lg {
  @media (min-width: 1024px) { @content; }
}
@mixin xl {
  @media (min-width: 1280px) { @content; }
}

// Grid column utilities with responsive variants
@for $i from 1 through 12 {
  .col-#{$i} {
    grid-column: span #{$i} / span #{$i};
  }
  
  @include sm {
    .col-#{$i}-sm {
      grid-column: span #{$i} / span #{$i};
    }
  }
  
  @include md {
    .col-#{$i}-md {
      grid-column: span #{$i} / span #{$i};
    }
  }
  
  @include lg {
    .col-#{$i}-lg {
      grid-column: span #{$i} / span #{$i};
    }
  }
  
  @include xl {
    .col-#{$i}-xl {
      grid-column: span #{$i} / span #{$i};
    }
  }
}

// Grid gap utilities
.gap {
  &-0 { gap: 0; }
  &-1 { gap: 0.25rem; }
  &-2 { gap: 0.5rem; }
  &-4 { gap: 1rem; }
  &-6 { gap: 1.5rem; }
  &-8 { gap: 2rem; }
}

// Flex utilities
.flex {
  &-row { flex-direction: row; }
  &-row-reverse { flex-direction: row-reverse; }
  &-col { flex-direction: column; }
  &-col-reverse { flex-direction: column-reverse; }
  
  &-wrap { flex-wrap: wrap; }
  &-nowrap { flex-wrap: nowrap; }
  &-wrap-reverse { flex-wrap: wrap-reverse; }
  
  &-1 { flex: 1; }
  &-auto { flex: auto; }
  &-initial { flex: initial; }
  &-none { flex: none; }
}

// Justify content
.justify {
  &-start { justify-content: flex-start; }
  &-end { justify-content: flex-end; }
  &-center { justify-content: center; }
  &-between { justify-content: space-between; }
  &-around { justify-content: space-around; }
  &-evenly { justify-content: space-evenly; }
}

// Align items
.items {
  &-start { align-items: flex-start; }
  &-end { align-items: flex-end; }
  &-center { align-items: center; }
  &-baseline { align-items: baseline; }
  &-stretch { align-items: stretch; }
}